openapi: 3.0.0

schemes:
  - https

servers:
  - url: ""
    description: "Age of Empires: Definitive Edition API - Localhost"
  - url: "/api/"
    description: "Age of Empires: Definitive Edition API"

info:
  title: "Age Of Empires: Definitive Edition API"
  description: "Simple API to retrieve resources related to Age of Empires: Definitive Edition."
  version: "1.0.0"
  contact:
    name: Alberto Herrera Alanis

externalDocs:
  description: "Project repository"
  url: "https://github.com/albertoha94/Js.Aoede-Api"

produces:
  - "application/json"

paths:
  /civilizations/all:
    get:
      summary: Gets a list of the civilizations in the game.
      responses:
        200:
          description: A list of civilization objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CivilizationList"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"
  /civilizations/{id}:
    get:
      summary: Gets a given civilization by its id.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric Id of the civilization to get.
          schema:
            type: string
      responses:
        200:
          description: A civilization object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Civilization"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"

  /structures/all:
    get:
      summary: Gets a list of the structures in the game.
      responses:
        200:
          description: A list of structure objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StructureList"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"
  /structures/{id}:
    get:
      summary: Gets a given structure by its id.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric Id of the structure to get.
          schema:
            type: string
      responses:
        200:
          description: A structure object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Structure"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"

  /technologies/all:
    get:
      summary: Gets a list of the technologies in the game.
      responses:
        200:
          description: A list of technology objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TechnologyList"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"
  /technologies/{id}:
    get:
      summary: Gets a given technology by its id.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric Id of the technology to get.
          schema:
            type: string
      responses:
        200:
          description: A technology object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Technology"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"

  /units/all:
    get:
      summary: Gets a list of the units in the game.
      responses:
        200:
          description: A list of unit objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitList"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"
  /units/{id}:
    get:
      summary: Gets a given unit by its id.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric Id of the unit to get.
          schema:
            type: string
      responses:
        200:
          description: A unit object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
        404:
          description: A response object.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ResponseObject"

components:
  responses:
    ResponseObject:
      type: object
      required:
        - status
        - data
      properties:
        status:
          type: integer
          description: Status of the call
        data:
          type: string
          description: A string with the error message
  schemas:
    Civilization:
      type: object
      required:
        - name
        - expansion
        - army_type
        - civilization_bonus
      properties:
        name:
          type: string
          description: Name of the civilization
        expansion:
          type: string
          description: Expansion the civilization was introduced
        army_type:
          type: string
          description: Predominant army type of the civilization (e.g Archers, or Infantry)
        civilization_bonus:
          type: array
          items:
            type: string
            description: Bonuses of the civilization
    CivilizationList:
      type: array
      items:
        $ref: "#/components/schemas/Civilization"
    Unit:
      required:
        - name
        - description
        - expansion
        - age
        - created_in
        - cost
        - build_time
        - reload_time
        - movement_rate
        - line_of_sight
        - hit_points
        - range
        - attack
        - armor
        - attack_bonus
      properties:
        name:
          type: string
          description: Name of the unit
        description:
          type: string
          description: Description of the unit as in game.
        expansion:
          type: string
          description: Expansion in which the unit was introduced
        age:
          type: string
          description: Age in which the unit can be produced
        created_in:
          type: string
          description: Structure the unit is created in
        cost:
          type: object
          $ref: "#/components/schemas/Cost"
          description: Cost of the unit (JSON Object)
        build_time:
          type: integer
          description: Build time in seconds
        reload_time:
          type: number
          description: Time it takes the units to attack again in seconds
        movement_rate:
          type: number
          description: Speed of the unit using in game tiles
        line_of_sight:
          type: integer
          description: Line of sight of the unit
        hit_points:
          type: integer
          description: Hit points (health) of the unit
        range:
          type: string
          description: Range of the unit. There can be a minimum and maximum range in the format (min-max)
        attack:
          type: integer
          description: Attack of the unit
        armor:
          type: string
          description: Armor of the unit formated as 'melee/pierce'
        attack_bonus:
          type: array
          items:
            type: string
            description: Attack bonuses of the unit
    UnitList:
      type: array
      items:
        $ref: "#/components/schemas/Unit"
    Structure:
      required:
        - name
        - expansion
        - age
        - cost
        - build_time
        - hit_points
        - line_of_sight
        - armor
        - range
        - reload_time
        - attack
        - special
      properties:
        name:
          type: string
          description: Name of the structure
        expansion:
          type: string
          description: Expansion the structure was introduced
        age:
          type: string
          description: Age in which the structure can be built
        cost:
          type: object
          $ref: "#/components/schemas/Cost"
          description: Cost of the structure (JSON Object)
        build_time:
          type: integer
          description: Build time in seconds
        hit_points:
          type: integer
          description: Hit points (health) of the structure
        line_of_sight:
          type: integer
          description: Line of sight of the structure
        armor:
          type: string
          description: Armor of the structure formatted as 'melee/pierce'
        range:
          type: string
          description: Range of the structure. There can be a minimum and maximum range in the format (min-max)
        reload_time:
          type: number
          description: Reload time of the structure
        attack:
          type: integer
          description: Attack points of the structure
        special:
          type: array
          items:
            type: string
          description: Other information about the structure (Ex. More damage vs something)
    StructureList:
      type: array
      items:
        $ref: "#/components/schemas/Structure"
    Technology:
      required:
        - name
        - expansion
        - age
        - develops_in
        - cost
        - build_time
        - applies_to
        - description
      properties:
        name:
          type: string
          description: Name of the technology
        expansion:
          type: string
          description: Expansion the technology was introduced
        age:
          type: string
          description: Age in which the technology can be developed
        develops_in:
          type: string
          description: Structure the technology is developed in
        cost:
          type: object
          $ref: "#/components/schemas/Cost"
          description: Cost of the technology (JSON Object)
        build_time:
          type: integer
          description: Build time in seconds
        applies_to:
          type: array
          items:
            type: string
          description: Units or civilization the technology apply to
    TechnologyList:
      type: array
      items:
        $ref: "#/components/schemas/Technology"
    Cost:
      properties:
        Wood:
          type: integer
          description: How much wood it costs
        Food:
          type: integer
          description: How much food it costs
        Stone:
          type: integer
          description: How much stone it costs
        Gold:
          type: integer
          description: How much gold it costs
